{"version":3,"sources":["services/Errors.ts","utils/index.ts","services/RepositorySearch.ts","components/SearchItem.tsx","components/RepoSearch.tsx","hooks/useIsMounted.ts","hooks/useDebouncedValue.ts","hooks/useInfiniteScroll.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RateLimitExceeded","message","httpCode","Error","formatQueryString","queryObj","Object","keys","map","key","join","RepositorySearch","baseUrl","query","perPage","rateLimit","rateLimitRemaining","rateLimitReset","client","paginations","this","axios","create","baseURL","timeout","count","Date","now","Math","ceil","queryString","q","per_page","url","request","next","prev","first","last","get","response","headers","split","item","attrs","link","slice","reduce","obj","parseInt","data","items","status","StyledCard","styled","Card","theme","colors","gray","shadows","card","SearchItem","props","name","description","stargazers","watchers","forks","width","p","href","target","rel","style","display","fontSize","mt","alignItems","size","ml","List","ul","repoSearch","RepoSearch","isMounted","useRef","useEffect","current","useIsMounted","useState","keyword","setKeyword","keywordDebounced","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebouncedValue","repositories","setRepositories","isSearching","setIsSearching","hasMore","setHasMore","retryAfter","setRetryAfter","timer","search","useCallback","a","canNextPage","seconds","getRetryAfter","loadMore","nextPage","cb","targetRef","rootRef","containerRef","loaderRef","useLayoutEffect","targetNode","rootNode","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","root","rootMargin","threshold","observe","disconnect","useMemo","sx","maxWidth","mx","px","color","mb","onChange","event","currentTarget","repo","index","ref","textAlign","App","setPerPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ae1d330.chunk.js","sourcesContent":["export class RateLimitExceeded extends Error {\n  public httpCode: number\n\n  constructor(message: string) {\n    super(message)\n    this.httpCode = 403\n  }\n}\n","import { CallbackFunction, PaginationLinks } from './types'\n\nexport function formatQueryString(queryObj: {\n  [key: string]: string | number\n}): string {\n  return (\n    '?' +\n    Object.keys(queryObj)\n      .map((key) => `${key}=${queryObj[key]}`)\n      .join('&')\n  )\n}\n\nexport function parsePaginationLinks(str: string): PaginationLinks {\n  return str\n    .split(', ')\n    .map((item) => {\n      const attrs = item.split('; ')\n      const link = attrs[0].slice(1, -1)\n      const page = attrs[1].split('=')[1].slice(1, -1)\n      return [page, link]\n    })\n    .reduce((obj, item) => {\n      return { ...obj, [item[0]]: item[1] }\n    }, {})\n}\n\nexport function throttle(\n  fn: CallbackFunction,\n  concurrency: number,\n  delay: number,\n  scope: any,\n): CallbackFunction {\n  let count = 0\n\n  function resetTimer() {\n    count = 0\n    setTimeout(() => {\n      resetTimer()\n    }, delay)\n  }\n\n  resetTimer()\n\n  return function (...args: any[]) {\n    if (count < concurrency) {\n      count++\n      return fn.apply(scope, args)\n    }\n  }\n}\n","import axios, { AxiosInstance } from 'axios'\nimport { RateLimitExceeded } from './Errors'\nimport { formatQueryString, parsePaginationLinks } from '../utils'\nimport { PaginationLinks } from '../utils/types'\n\nexport default class RepositorySearch {\n  public baseUrl: string\n  public query: string = ''\n  public perPage: number = 100\n  public rateLimit: number = 10\n  public rateLimitRemaining: number = 0\n  public rateLimitReset: number = 0\n  private client: AxiosInstance\n  private paginations: PaginationLinks | undefined\n\n  constructor(baseUrl?: string) {\n    this.baseUrl = baseUrl || 'https://api.github.com'\n    this.client = axios.create({\n      baseURL: this.baseUrl,\n      timeout: 5000,\n    })\n  }\n\n  setPerPage(count: number) {\n    this.perPage = count\n  }\n\n  getRetryAfter() {\n    if (Date.now() < this.rateLimitReset) {\n      return Math.ceil((this.rateLimitReset - Date.now()) / 1000) // second\n    }\n\n    return 0\n  }\n\n  async search(query: string) {\n    if (!query) {\n      throw Error('can not search empty string')\n    }\n\n    this.query = query\n    const queryString = formatQueryString({\n      q: this.query,\n      per_page: this.perPage,\n    })\n    const url = `/search/repositories${queryString}`\n    return this.request(url)\n  }\n\n  canNextPage() {\n    return !!this.paginations?.next\n  }\n\n  canPreviousPage() {\n    return !!this.paginations?.prev\n  }\n\n  async nextPage() {\n    if (!!this.paginations?.next) {\n      return this.request(this.paginations.next)\n    }\n    return []\n  }\n\n  async previousPage() {\n    if (!!this.paginations?.prev) {\n      return this.request(this.paginations.prev)\n    }\n    return []\n  }\n\n  async firstPage() {\n    if (!!this.paginations?.first) {\n      return this.request(this.paginations.first)\n    }\n    return []\n  }\n\n  async lastPage() {\n    if (!!this.paginations?.last) {\n      return this.request(this.paginations.last)\n    }\n    return []\n  }\n\n  private async request(url: string) {\n    if (this.rateLimitRemaining === 0 && this.rateLimitReset > Date.now()) {\n      throw new RateLimitExceeded('no rate limit')\n    }\n\n    try {\n      const response = await this.client.get(url)\n      this.paginations = parsePaginationLinks(response.headers['link'])\n      this.rateLimit = parseInt(response.headers['x-ratelimit-limit'])\n      this.rateLimitRemaining = parseInt(\n        response.headers['x-ratelimit-remaining'],\n      )\n      this.rateLimitReset =\n        parseInt(response.headers['x-ratelimit-reset']) * 1000\n      return response.data.items\n    } catch (e) {\n      if (e.response.status === 403) {\n        throw new RateLimitExceeded(e.message)\n      }\n    }\n  }\n}\n","import styled from 'styled-components'\nimport { Card, Heading, Text, Flex, Link } from 'rebass'\nimport { GitFork, Eye, Star } from '@styled-icons/octicons'\n\ninterface SearchItemProps {\n  name: string\n  description: string\n  stargazers: number\n  watchers: number\n  forks: number\n  url: string\n}\n\nconst StyledCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.gray};\n  border-radius: 8px;\n  box-shadow: ${({ theme }) => theme.shadows.card};\n`\n\nexport default function SearchItem(props: SearchItemProps) {\n  const { name, description, stargazers, watchers, forks, url } = props\n\n  return (\n    <StyledCard width={1} p={3}>\n      <Link\n        href={url}\n        target='_blank'\n        rel='noopenner noreferrer'\n        style={{ display: 'inline-block' }}\n      >\n        <Heading fontSize={3} width={1}>\n          {name}\n        </Heading>\n      </Link>\n      <Text mt={2}>{description}</Text>\n      <Flex mt={3}>\n        <Flex width={1} alignItems='center'>\n          <Star size='24' />\n          <Text ml={1}>{stargazers}</Text>\n        </Flex>\n        <Flex width={1} alignItems='center'>\n          <Eye size='24' />\n          <Text ml={1}>{watchers}</Text>\n        </Flex>\n        <Flex width={1} alignItems='center'>\n          <GitFork size='24' />\n          <Text ml={1}>{forks}</Text>\n        </Flex>\n      </Flex>\n    </StyledCard>\n  )\n}\n","import { useEffect, useState, useCallback, useRef, useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Box, Heading, Text } from 'rebass'\nimport { Input } from '@rebass/forms'\nimport useIsMounted from '../hooks/useIsMounted'\nimport useDebouncedValue from '../hooks/useDebouncedValue'\nimport useInfiniteScroll from '../hooks/useInfiniteScroll'\nimport RepositorySearch from '../services/RepositorySearch'\nimport { RateLimitExceeded } from '../services/Errors'\nimport SearchItem from '../components/SearchItem'\n\nconst List = styled.ul`\n  margin: 32px 0;\n  padding: 0;\n  list-style: none;\n\n  > *:not(:first-child) {\n    margin-top: 24px;\n  }\n`\n\nconst repoSearch = new RepositorySearch()\nrepoSearch.setPerPage(30)\n\nexport default function RepoSearch() {\n  const isMounted = useIsMounted()\n\n  const [keyword, setKeyword] = useState('')\n  const keywordDebounced = useDebouncedValue(keyword, 500)\n\n  const [repositories, setRepositories] = useState<any[]>([])\n\n  const [isSearching, setIsSearching] = useState(false)\n\n  const [hasMore, setHasMore] = useState(false)\n\n  const [retryAfter, setRetryAfter] = useState(0)\n  useEffect(() => {\n    let timer: number\n    if (retryAfter) {\n      timer = setTimeout(() => {\n        setRetryAfter(retryAfter - 1)\n      }, 1000)\n    }\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [retryAfter])\n\n  const search = useCallback(\n    async (keyword) => {\n      try {\n        setIsSearching(true)\n        const data = await repoSearch.search(keyword)\n        if (isMounted) {\n          if (repoSearch.canNextPage()) {\n            setHasMore(true)\n          }\n          setRepositories([...data])\n        }\n      } catch (e) {\n        if (e instanceof RateLimitExceeded) {\n          const seconds = repoSearch.getRetryAfter()\n          setRetryAfter(seconds)\n        }\n      } finally {\n        setIsSearching(false)\n      }\n    },\n    [isMounted],\n  )\n\n  const loadMore = useCallback(async () => {\n    if (repoSearch.canNextPage() && retryAfter === 0) {\n      try {\n        setIsSearching(true)\n        const data = await repoSearch.nextPage()\n        if (isMounted) {\n          if (repoSearch.canNextPage()) {\n            setHasMore(true)\n          } else {\n            setHasMore(false)\n          }\n          setRepositories((prev) => [...prev, ...data])\n        }\n      } catch (e) {\n        if (e instanceof RateLimitExceeded) {\n          const seconds = repoSearch.getRetryAfter()\n          setRetryAfter(seconds)\n        }\n      } finally {\n        setIsSearching(false)\n      }\n    }\n  }, [isMounted, retryAfter])\n\n  useEffect(() => {\n    if (!keywordDebounced) return\n    search(keywordDebounced)\n  }, [keywordDebounced, search])\n\n  const containerRef = useRef<HTMLDivElement>(null)\n  const loaderRef = useRef<HTMLDivElement>(null)\n\n  useInfiniteScroll(loadMore, loaderRef, containerRef)\n\n  const message = useMemo(() => {\n    if (!keyword) {\n      return 'Please typing some keywords to search repositories'\n    }\n    if (retryAfter) {\n      return `Wait ${retryAfter} seconds to load`\n    }\n    if (hasMore) {\n      return 'Loading more results...'\n    }\n    if (isSearching) {\n      return 'searching...'\n    }\n    if (keywordDebounced) {\n      return 'No more result'\n    }\n  }, [hasMore, isSearching, keyword, keywordDebounced, retryAfter])\n\n  return (\n    <Box\n      sx={{\n        maxWidth: 900,\n        mx: 'auto',\n        px: 3,\n      }}\n    >\n      <Heading fontSize={5} color='#07c' mb={2}>\n        GitHub Search\n      </Heading>\n      <Input\n        value={keyword}\n        onChange={(event: React.FormEvent<HTMLInputElement>) =>\n          setKeyword(event.currentTarget.value)\n        }\n      />\n      <Box>\n        <List>\n          {repositories.map((repo, index) => (\n            <li key={`${repo['node_id']}${index}`}>\n              <SearchItem\n                name={repo['full_name']}\n                description={repo['description']}\n                stargazers={repo['stargazers_count']}\n                watchers={repo['watchers_count']}\n                forks={repo['forks_count']}\n                url={repo['html_url']}\n              />\n            </li>\n          ))}\n        </List>\n        <Text ref={loaderRef} fontSize={3} color='#30c' textAlign='center'>\n          {message}\n        </Text>\n      </Box>\n    </Box>\n  )\n}\n","import { useRef, useEffect } from 'react'\n\nexport default function useIsMounted() {\n  const isMounted = useRef(false)\n\n  useEffect(() => {\n    isMounted.current = true\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n\n  return isMounted.current\n}\n","import { useState, useEffect } from 'react'\n\nexport default function useDebouncedValue<T>(value: T, delay: number = 500): T {\n  const [debouncedValue, setDebouncedValue] = useState(value)\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import React, { useLayoutEffect } from 'react'\nimport { CallbackFunction } from '../utils/types'\n\nexport default function useInfiniteScroll(\n  cb: CallbackFunction,\n  targetRef: React.RefObject<HTMLDivElement>,\n  rootRef: React.RefObject<HTMLDivElement>,\n) {\n  useLayoutEffect(() => {\n    const targetNode = targetRef.current\n    const rootNode = rootRef.current || null\n    if (!targetNode) return\n\n    const options = {\n      root: rootNode,\n      rootMargin: `0px 0px 0px 0px`,\n      threshold: 0.5,\n    }\n\n    const listener = (entries: IntersectionObserverEntry[]) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          cb()\n        }\n      })\n    }\n\n    const observer = new IntersectionObserver(listener, options)\n    observer.observe(targetNode)\n\n    return () => observer.disconnect()\n  }, [cb, rootRef, targetRef])\n}\n","import { ThemeProvider } from 'styled-components'\nimport theme from '@rebass/preset'\nimport RepoSearch from './components/RepoSearch'\n\nexport default function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <RepoSearch />\n    </ThemeProvider>\n  )\n}\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}